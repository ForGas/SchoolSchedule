// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolSchedule.Infrastructure.Data;

#nullable disable

namespace SchoolSchedule.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220620045912_AddTeacher")]
    partial class AddTeacher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolSchedule.Domain.EducationalClassAggregate.EducationalClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("EducationalClasses", (string)null);
                });

            modelBuilder.Entity("SchoolSchedule.Domain.EducationalClassAggregate.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthYear")
                        .HasColumnType("date");

                    b.Property<Guid>("EducationalClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EducationalClassId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("SchoolSchedule.Domain.LessonAggregate.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EducationalClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EducationalClassId")
                        .IsUnique()
                        .HasFilter("[EducationalClassId] IS NOT NULL");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("SchoolSchedule.Domain.EducationalClassAggregate.Student", b =>
                {
                    b.HasOne("SchoolSchedule.Domain.EducationalClassAggregate.EducationalClass", "EducationalClass")
                        .WithMany("Students")
                        .HasForeignKey("EducationalClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalClass");
                });

            modelBuilder.Entity("SchoolSchedule.Domain.LessonAggregate.Teacher", b =>
                {
                    b.HasOne("SchoolSchedule.Domain.EducationalClassAggregate.EducationalClass", "EducationalClass")
                        .WithOne("ClassroomTeacher")
                        .HasForeignKey("SchoolSchedule.Domain.LessonAggregate.Teacher", "EducationalClassId");

                    b.OwnsMany("SchoolSchedule.Domain.LessonAggregate.Subject", "Subjects", b1 =>
                        {
                            b1.Property<Guid>("TeacherId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TeachSubjects");

                            b1.HasKey("TeacherId", "Id");

                            b1.ToTable("Subjects", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TeacherId");
                        });

                    b.Navigation("EducationalClass");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SchoolSchedule.Domain.EducationalClassAggregate.EducationalClass", b =>
                {
                    b.Navigation("ClassroomTeacher")
                        .IsRequired();

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
